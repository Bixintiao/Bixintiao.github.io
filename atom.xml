<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pancheng&#39;Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-25T02:00:00.525Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Pan Cheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>crackme06简单粗暴</title>
    <link href="http://yoursite.com/2017/03/25/crackme06/"/>
    <id>http://yoursite.com/2017/03/25/crackme06/</id>
    <published>2017-03-25T01:31:47.000Z</published>
    <updated>2017-03-25T02:00:00.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天爆破一个crackme的小程序吧"><a href="#今天爆破一个crackme的小程序吧" class="headerlink" title="今天爆破一个crackme的小程序吧"></a>今天爆破一个crackme的小程序吧</h1><p>首先用peid查一下壳</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/PoitBDj.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>可以看到这是一个用Delphi写的小程序，没有加壳</p>
<p>然后用od加载进来运行一下</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/jD9Eld2.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>随便输入了一些内容，但是ok按钮是灰色的点不开啊啊啊，然后点了下about me的按钮</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/KuVNR6h.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>大概的意思就是想要破解这个程序需要然ok和cancella这两个按钮全部隐藏</p>
<p>通过一顿百度，到网上找到了这么一个工具reshacker，支持反汇编delphi，使用工具加载程序</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/F983nME.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>翻了一下，找到了ok和cancella两个按钮的object，然后到百度上搜了一下delphi的命令</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/3EJBwcO.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>打开新编译的程序，成功破解了，具体走od的算法对于我这个渣渣来说好难啊，希望有大牛来指点一下：）</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/qhUAqtW.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>源程序和使用工具请到我的git上下载<a href="https://github.com/Bixintiao/blogtool.git" target="_blank" rel="external">https://github.com/Bixintiao/blogtool.git</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;今天爆破一个crackme的小程序吧&quot;&gt;&lt;a href=&quot;#今天爆破一个crackme的小程序吧&quot; class=&quot;headerlink&quot; title=&quot;今天爆破一个crackme的小程序吧&quot;&gt;&lt;/a&gt;今天爆破一个crackme的小程序吧&lt;/h1&gt;&lt;p&gt;首先用pei
    
    </summary>
    
    
      <category term="逆向" scheme="http://yoursite.com/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>John用法</title>
    <link href="http://yoursite.com/2017/03/24/John%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2017/03/24/John用法/</id>
    <published>2017-03-24T07:37:20.000Z</published>
    <updated>2017-03-24T07:42:12.775Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>#cd /tmp   </li>
</ol>
<pre><code>wget http://www.openwall.com/john/g/john-1.7.4.2.tar.gz

tar -zxvf john-1.7.4.2.tar.gz

cd john-1.7.4.2

cd src

make linux-x86-any-a.out
</code></pre><p>或者使用yum install john<br>2：unshadow /etc/passwd /etc/shadow &gt;passwd.txt (注意只有root才能执行unshadow，<br>                                                                        因为只有root才能读取/etc/shadow。）<br>3：chmod 600 passwd.txt<br>4: john passwd.txt<br>此外，如果已经破解成功，则可以查看john.pot来查看。<br>＃john -show passwd.txt<br>＃john -show -users:yujs passwd.txt<br>获得指定用户的密码。<br>John the Ripper的四种破解模式</p>
<p>「字典档」破解模式（Wordlist Mode）<br>这在John所支援的破解模式中是最简单的一种，你要做的唯一工作就是告诉John字典档在哪（字典档就是文字档，内容每行一个单字代表试验的密码），好 让它可以取出破解。在「字典档」破解模式里可以使用「字词变化」功能，来让这些规则自动的套用在每个读入的单字中，以增加破解的机率。</p>
<p>「简单」破解模式（Single Crack）<br>「简单」破解模式是专门针对「使用帐号当作密码」的懒人所设计的；所谓「使用帐号当作密码」的意思是，如果一个使用者帐号是「john」，它的密码也取为 「john」。在「简单」破解模式里john会拿密码档内的「帐号」栏位等相关资讯来破解密码，并且使用多种「字词变化」的规则套用到的「帐号」内，以增 加破解的机率。如帐号「john」，它会尝试用「john」、「john0」、「njoh」、「j0hn」….等规则变化来尝试密码的可能性。</p>
<p>「增强」破解模式（Incremental Mode）<br>这是John里面功能最强大的破解模式，它会自动尝试所有可能的字元组合，然后当作密码来破解。这个破解模式所需要的时间非常冗长，因为要尝试组合字元是 非常耗费时间的，所以John才会定义一些「字元频率表」（character frequencytables）来帮助破解。简言之这个破解方法就是「暴力法」，把所有可能的密码组合都测试一次，来得到正确的结果。</p>
<p>「外挂模组」破解模式（External Mode）<br>这个破解模式是让使用者可以自己用C语言写一些「破解模组程式」，然后挂在John里面来使用。其实所谓的「破解模组程式」就是一些用C语言设计好的副函 示，然后它的功能就是产生出一些单字来让John尝试破解。而</p>
<p>在执行John程式时，它在载入这些「破解模组程式」时会自动编译这些C语言副函示然后来使用。 （真伟大，光这点就让笔者佩服五体投地）</p>
<p>John the Ripper命令列参数说明</p>
<p>【命令列指令】</p>
<p>john [-命令列参数] [密码档档名]</p>
<p>【命令列参数】</p>
<p>参数：-single<br>说明：使用「简单」（Single Crack）破解模式解密，主要是根据使用者的「帐号」产生变化来猜测解密，其变化规则记录在JOHN.INI档案的 [List.Rules:Single]区域内。 （稍后会再介绍）</p>
<pre><code>范例：john -single passwd
</code></pre><p>参数：-wordfile:[字典档档名] -stdin</p>
<p>说明：使用「字典档」破解模式解密，由字典档内读取单字来破解；或是可以加上-stdin参数，代表由键盘输入单字来破解。</p>
<pre><code>范例：john -wordfile:bigdict.dic passwd
</code></pre><p>参数：-rules<br>说明：在「字典档」破解模式下，开启字词规则变化功能，如「字典档」读入单字cook，则开启字词变化下，程式可能会尝试cook、c00k、 cooker、cook0…等其它字词。详细变化规则记录在JOHN.INI档案的[List.Rules:Wordlist]区域内。（稍后会再介绍）</p>
<pre><code>范例：john -wordfile:bigdict.dic -rules passw
</code></pre><p>参数：-incremental[:模式名称]（参数也可以简写成-i[:模式名称]）<br>说明：使用「增强」破解模式解密，就是组合所有可能的字元当作密码来破解。在JOHN.INI档案内的[Incremental:<strong>*</strong>]区域里定义 好许多的模式名称，可以指定使用哪一个模式来破解。 （稍后会再介绍）</p>
<pre><code>范例：john -i:all passwd
</code></pre><p>参数：-external:[模组名称]<br>说明：使用「外挂模组」破解模式解密，使用者可以自己撰写额外的「破解模组程式」。 「破解模组程式」是记录在JOHN.INI档案内的[List.External:<strong>**</strong>]区域内。</p>
<pre><code>范例：john -external:double passwd
</code></pre><p>参数：-stdout[:LENGTH]<br>说明：这个选项跟破解没有任何关系，只是单纯显示John所产生出来的单字到萤幕上。</p>
<pre><code>范例：john –i:all –stdout
</code></pre><p>参数：-restore[:回复档案名称]<br>说明：继续上次中断的解密工作。 John在执行破解密码工作时，可以按下＜CTRLC＞键中断工作，而当前的解密进度情形会被存放在一个名为「restore」的档案内。而使用 「-restore」参数，可以从「restore」档案内读取上一次破解时候中断的位置，然后接下去继续破解。</p>
<pre><code>范例：john –restore
</code></pre><p>参数：-session[:记录档档名]<br>说明：这个选项是让你设定目前工作记录档（session file）的档名。所谓的工作记录档就是可以用「-restore」参数回复工作的档案。另外，在使用John做多工破解工作时，使用 「-session」参数可以为每个工作设定各别的记录档，而不会混在一起。</p>
<pre><code>范例：john –wordfile:bigdict.dic –session:work1 passwd
</code></pre><p>参数：-status[:记录档档名]<br>说明：显示工作记录档里面所记录的工作状态。</p>
<pre><code>范例：john –status:restore
</code></pre><p>参数：-makechars:[档名]<br>说明：制作「字元频率表」。这个选项会以目前已破解出的密码为基础，来产生「字元频率表」（注：John会把已破解出的密码记录在JOHN.POT档案 内，）。如果所指定档名的档案已经存在的话，会被覆写。此选项产生出来的档案，可以用在「增强」破解模式上。</p>
<pre><code>范例：john –makechars:ownchars
</code></pre><p>参数：-show<br>说明：显示目前已经破解出的密码。因为JOHN.POT档案内并不储存「帐号」资料，所以使用时你应该同时输入相对应的密码档。</p>
<pre><code>范例：john –show passwd
</code></pre><p>参数：-test<br>说明：测试目前机器执行John各类型密码破解时的速度。</p>
<pre><code>范例：john –test
</code></pre><p>参数：-users:[-]LOGIN｜UID [,..]<br>说明：只破解某个「帐号」的密码，如只针对root或拥有root权利UID=0的使用者。 （若在LOGIN｜UID名称前加上“－”符号则是相反，表示不要破解这个「帐号」的密码）</p>
<pre><code>范例：john –i:all –users:root passwd
</code></pre><p>参数：-groups:[-]UID[,..]<br>说明：只破解某个「群组」内用户的密码。 （若在UID名称前加上“－”符号则是相反，表示不要破解这个「群组」内用户的密码） </p>
<pre><code>范例：john –i:all –groups:100 
</code></pre><p>参数：-shells:[-]SHELL [,..]<br>说明：和上面两个参数一样，这个选项是只针对所有可以使用shell的用户进行破解密码工作，对其它用户不予理会。（若在SHELL名称前加上“－”符号 则是相反，表示不要破解可以使用这个SHELL的用户的密码）。指定SHELL时，你可以省略绝对路径，如参数「-shells:csh」就会包含 「/bin/csh」或「/usr/bin/csh」等路径，但如果你指定的是「-shells:/bin/csh」则只会包含「/bin/csh」这个 SHELL名称。</p>
<pre><code>范例：john –i:all –shells:csh passwd
</code></pre><p>参数：-salts:[-]COUNT<br>说明：只破解「salts」大于「COUNT」的帐号的密码，可以使你得到较佳破解速度（所谓「salts」是指UNIX拿来作为「密码」编码基础的单 位）。举例来说，你可以先只破解某部分用户的密码「-salts:2」来获得较佳的速度，然后有时间时才破解剩余用户的密码「-salts:-2」。</p>
<pre><code>范例：john –i:all –salts:2 passwd
</code></pre><p>参数：-format:NAME与-savemem:LEVEL<br>说明：这两个参数是有关John内部运作的设定，跟破解本身没有直接关系，所以省略不介绍。</p>
<p>最常用的两个：</p>
<pre><code>john -w:all.txt passwd.txt
john -show passwd.txt &gt;/pass.txt 把解密结果保存到pass.txt里面。
</code></pre><p>字典可以到<a href="http://www.milw0rm.com/上在下载" target="_blank" rel="external">http://www.milw0rm.com/上在下载</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;#cd /tmp   &lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;wget http://www.openwall.com/john/g/john-1.7.4.2.tar.gz

tar -zxvf john-1.7.4.2.tar.gz

cd john-1
    
    </summary>
    
    
      <category term="linux取证" scheme="http://yoursite.com/tags/linux%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>跟表哥学的爆破linux shadow</title>
    <link href="http://yoursite.com/2017/03/24/%E8%B7%9F%E8%A1%A8%E5%93%A5%E5%AD%A6%E7%9A%84%E7%88%86%E7%A0%B4linux%20shadow/"/>
    <id>http://yoursite.com/2017/03/24/跟表哥学的爆破linux shadow/</id>
    <published>2017-03-24T01:18:20.000Z</published>
    <updated>2017-03-25T02:00:07.892Z</updated>
    
    <content type="html"><![CDATA[<p><strong>这个操作的前提是拿到root权限，至于root权限可以参考单用户绕过，具体步骤改天出</strong></p>
<h1 id="0x01-etc-passwd和-etc-shadow"><a href="#0x01-etc-passwd和-etc-shadow" class="headerlink" title="0x01 /etc/passwd和/etc/shadow"></a>0x01 /etc/passwd和/etc/shadow</h1><p>帐号管理最重要的两个档案就是‘ /etc/passwd 与 /etc/shadow ’了！这两个档案可以说是 Linux 里头最重要的档案之一了！ 如果没有这两个档案的话，呵呵！您可是无法登入 Linux 的呦！所以，底下我们先针对这两个档案来进行说明。当然啰，更详细的资料您可以自行 man 5 passwd 及 man 5 shadow 的啦～</p>
<h2 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h2><p>这个档案的构造是这样的：每一行都代表一个帐号， 有几行就代表有几个帐号在你的系统中！不过需要特别留意的是， 里头很多帐号本来就是系统中必须要的，我们可以简称他为系统帐号， 例如 bin, daemon, adm, nobody 等等，这些帐号是系统正常运作时所需要的，请不要随意的杀掉他呢！ 这个档案的内容有点像这样：</p>
<pre><code>root:x:0:0:root:/root:/bin/bash

bin:x:1:1:bin:/bin:/sbin/nologin

daemon:x:2:2:daemon:/sbin:/sbin/nologin

adm:x:3:4:adm:/var/adm:/sbin/nologin
</code></pre><p>我们先来看一下每个 Linux 系统都会有的第一行，就是 root 这个系统管理员那一行好了， 你可以明显的看出来，每一行使用‘:’分隔开，共有七个咚咚，分别是：</p>
<ol>
<li>帐号名称：就是帐号名称啦！对应 UID 用的！例如 root 就是预设的系统管理员的帐号名称；</li>
<li>密码：早期的 Unix 系统的密码是放在这个档案中的， 但是因为这个档案的特性是所有的程序都能够读取，所以，这样一来很容易造成资料的被窃取， 因此后来就将这个栏位的密码资料给他改放到 /etc/shadow 中了，关于 /etc/shadow 这一部份等一下再说。而这里你会看到一个 x ，呵呵！别担心，这表示密码已经被移动到 shadow 这个加密过后的档案啰；</li>
<li>UID：这个就是使用者识别码 (ID) 啰！通常 Linux 对于 UID 有几个限制需要说给您瞭解一下：<br>id 范围   该 ID 使用者特性0。当 UID 是 0 时，代表这个帐号是‘系统管理员’！所以当你要作另一个系统管理员帐号时， 你可以将该帐号的 UID 改成 0 即可；这也就是说，一部系统上面的系统管理员不见得只有 root 喔！ 不过，不很建议有多个帐号的 UID 是 0 啦～<br>1~499保留给系统使用的 ID，其实 1~65534 之间的帐号并没有不同， 也就是除了 0 之外，其他的 UID 并没有不一样，预设 500 以下给系统作为保留帐号只是一个习惯。这 样的好处是，以有名的 DNS 伺服器的启动服务‘ named ’为例，这个程式的预设所有人 named 的帐号 UID 是 25 ，当有其他的帐号同样是 25 时，很可能会造成系统的一些小问题！为了杜绝这样的问题，建议保留 500 以前的 UID 给系统吧！不过，一般来说， 1~99 会保留给系统预设的帐号，另外 100~499 则保留给一些服务来使用。500~65535   给一般使用者用的。事实上，目前的 linux 核心 (2.6.x 版)已经可以支援到 4294967295 (2^32-1) 这么大的 UID 号码喔！上面这样说明可以瞭解了吗？是的， UID 为 0 的时候，就是 root 呦！所以请特别留意一下你的 /etc/passwd 档案！</li>
<li>GID：这个与 /etc/group 有关！其实 /etc/group 的观念与 /etc/passwd 差不多，只是他是用来规范 group 的而已！</li>
<li>使用者资讯说明栏：这个栏位基本上并没有什么重要用途， 只是用来解释这个帐号的意义而已！不过，如果您提供使用 finger 的功能时， 这个栏位可以提供很多的讯息呢！底下的 chfn 可以解释一下啰！</li>
<li>家目录：这是使用者的家目录，以上面为例， root 的家目录在 /root ，所以当 root 登入之后，就会立刻跑到 /root 里头啦！呵呵！ 如果你有个帐号的使用空间特别的大，你想要将该帐号的家目录移动到其他的硬碟去， 没有错！可以在这里进行修改呦！预设的使用者家目录在 /home/yourIDname</li>
<li>Shell：所谓的 shell 是用来沟通人类下达的指令与硬体之间真正动作的界面！我们通常使用 /bin/bash 这个 shell 来进行指令的下达！嘿嘿！发现了吧？我们在 bash 章节里面提到很多次，登入 Linux 时为何预设是 bash 呢？就是这里设定的啦～ 这里比较需要注意的是，有一个 shell 可以用来替代成让帐号无法登入的指令！那就是 /sbin/nologin 这个东西！这也可以用来制作纯 pop 邮件帐号者的资料呢！</li>
</ol>
<h2 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h2><p>上面约略提到，由于每个程序都需要取得 uid 与 gid 来判断权限的问题，所以， /etc/passwd 的权限必须要设定成为 -rw-r–r– 这样的权限，在这样的情况下， 使用者的密码不就任何人都可以看到吗？即使这个档案内的密码栏是加密的， 坏心肠的朋友也可能利用暴力破解法去 try and error 找出您的密码资料……<br>因为这样的关系，所以后来发展出将密码移动到 /etc/shadow 这个档案分隔开来的技术， 而且还加入很多的密码限制参数在 /etc/shadow 里头呢！我们先来瞭解一下这个档案的构造吧！ 我的 /etc/shadow 档案有点像这样：</p>
<pre><code>root:$1$i9Ejldjfjio389u9sjl$jljsoi45QE/:12959:0:99999:7:::

bin:*:12959:0:99999:7:::

daemon:*:12959:0:99999:7:::

adm:*:12959:0:99999:7:::
</code></pre><p>　　基本上， shadow 同样以‘:’作为分隔符号，如果数一数，会发现共有九个栏位啊， 这九个栏位的用途是这样的：</p>
<ol>
<li>帐号名称：由于密码也需要与帐号对应啊～因此， 这个档案的第一栏就是帐号，必须要与 /etc/passwd 相同才行！</li>
<li>密码：这个才是真正的密码，而且是 经过编码过的密码啦！ 你只会看到有一些特殊符号的字母就是了！需要特别留意的是， 虽然这些加密过的密码很难被解出来，但是‘很难’不等于‘不会’，所以， 这个档案的预设属性是‘-rw——-’或者是‘-r——–’，亦即只有 root 才可以读写就是了！你得随时注意，不要不小心更动了这个档案的属性呢！另外， 如果是在密码栏的第一个字元为‘ <em> ’或者是‘ ! ’，表示这个帐号并不会被用来登入的意思。 所以万一哪一天你的某个使用者不乖时，可以先在这个档案中，将他的密码栏位的最前面多加一个 </em> ！嘿嘿！他就无法使用该帐号啰！直到他变乖了，再给他启用啊！</li>
<li>最近更动密码的日期：这个栏位记录了‘更动密码的那一天’的日期， 不过，很奇怪呀！在我的例子中怎么会是 12959 呢？呵呵，这个是因为计算 Linux 日期的时间是以 1970 年 1 月 1 日作为 1 ，而 1971 年 1 月 1 日则为 366 啦！ 所以这个日期是累加的呢！得注意一下这个资料呦！那么最近的 2005 年 1 月 1 日就是 12784 啦，瞭解了吗？</li>
<li>密码不可被更动的天数： 第四个栏位记录了这个帐号的密码需要经过几天才可以被变更！如果是 0 的话， 表示密码随时可以更动的意思。这的限制是为了怕密码被某些人一改再改而设计的！如果设定为 20 天的话，那么当你设定了密码之后， 20 天之内都无法改变这个密码呦！</li>
<li>密码需要重新变更的天数： 由于害怕密码被某些‘有心人士’窃取而危害到整个系统的安全，所以有了这个栏位的设计。 你必须要在这个时间之内重新设定你的密码，否则这个帐号将会暂时失效。 而如果像上面的 99999 的话，那就表示，呵呵，密码不需要重新输入啦！ 不过，如果是为了安全性，最好可以设定一段时间之后，严格要求使用者变更密码呢！</li>
<li>密码需要变更期限前的警告期限：当帐号的密码失效期限快要到的时候， 就是上面那个‘必须变更密码’的那个时间时， 系统会依据这个栏位的设定，发出‘警告’言论给这个帐号，提醒他‘再过 n 天你的密码就要失效了，请尽快重新设定你的密码呦！’，如上面的例子，则是密码到期之前的 7 天之内，系统会警告该用户。</li>
<li>密码过期的恕限时间：如果用户过了警告期限没有重新输入密码， 使得密码失效了，也就是说，你在‘必须变更密码的期限前，并没有变更你的密码！’ 那么该组密码就称为‘失效的密码’啰～怎么办？没关系，还有这个栏位的天数设计啊～ 意思就是说，当密码失效后，你还可以用这个密码在 n 天内进行登入的意思。 而如果在这个天数后还是没有变更密码，呵呵！那么您的帐号就失效了！无法登入！</li>
<li>帐号失效日期：这个日期跟第三个栏位一样，都是使用 1970 年以来的总日数设定。这个栏位表示： 这个帐号在此栏位规定的日期之后，将无法再使用。 这个栏位会被使用通常应该是在‘收费服务’的系统中， 你可以规定一个日期让该帐号不能再使用啦！</li>
<li>保留：最后一个栏位是保留的，看以后有没有新功能加入。</li>
</ol>
<p>　　<strong>举个例子来说好了，假如我的 dmtsai 这个使用者的密码栏如下所示：</strong></p>
<pre><code>dmtsai:$1$8zdAKdfC$XDa8eSus2I7nQL7UjRsIy/:13025:5:60:7:2:13125:
</code></pre><p>这表示什么呢？要注意的是， 13025 是 2005/08/30 ，所以， dmtsai 这个使用者他的密码相关意义是：</p>
<p>最近一次更动密码的日期是 2005/08/30 (13025)；<br>能够修改密码的时间是 5 天以后，也就是 2005/09/04 以前 dmtsai 不能修改自己的密码； 如果使用者还是尝试要更动自己的密码，系统就会出现这样的讯息：</p>
<pre><code>You must wait longer to change your password
passwd: Authentication token manipulation error
</code></pre><p>使用者必须要在 2005/09/04 到 2005/10/29 之间的 60 天限制内去修改自己的密码，若 2005/10/29 之后还是没有变更密码时，该帐号就会宣告失效；如果使用者一直没有更改密码，那么在 2005/10/29 之前的 7 天内，系统会警告 dmtsai 应该修改密码的相关资讯；例如当 dmtsai 登入时，系统会主动提示如下的资讯：</p>
<pre><code>Warning: your password will expire in 5 days
</code></pre><p>如果该帐号一直到 2005/10/29 都没有更改密码，由于还有两天的恕限时间，因此， dmtsai 还是可以在 2005/10/31 以前继续登入；如果使用者在 2005/10/29 以前变更过密码，那么那个 13025 的日期就会跟著改变，因此， 所有的限制日期也会跟著相对变动喔！^_^无论使用者如何动作，到了 13125 ，大约是 2005/12/8 左右，该帐号就失效了～</p>
<p><strong>转自<a href="http://blog.chinaunix.net/uid-20672559-id-3442754.html" target="_blank" rel="external">http://blog.chinaunix.net/uid-20672559-id-3442754.html</a></strong></p>
<h1 id="0x02提取密码文件"><a href="#0x02提取密码文件" class="headerlink" title="0x02提取密码文件"></a>0x02提取密码文件</h1><h2 id="创建测试账号"><a href="#创建测试账号" class="headerlink" title="创建测试账号"></a>创建测试账号</h2><pre><code>adduser textuser
</code></pre><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="images/adduser.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/Uh2ePB6.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="获取密码文件"><a href="#获取密码文件" class="headerlink" title="获取密码文件"></a>获取密码文件</h2><pre><code>unshadow /etc/passwd /etc/shadow &gt; password
</code></pre><p>password就是等待破解的密码文件</p>
<h1 id="0x03破解工具"><a href="#0x03破解工具" class="headerlink" title="0x03破解工具"></a>0x03破解工具</h1><p>使用<strong>John the Ripper password cracker</strong>（<a href="http://www.openwall.com/john/" target="_blank" rel="external">http://www.openwall.com/john/</a>）<br>我这里下载了这个版本<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="images/john.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/UkPMCwu.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="0x04开始破解"><a href="#0x04开始破解" class="headerlink" title="0x04开始破解"></a>0x04开始破解</h1><p>john既可以在windows下破解，也可以在linux下破解</p>
<hr>
<p><strong>直接全部爆破</strong></p>
<pre><code>john password
</code></pre><p><strong>制定用户爆破</strong></p>
<pre><code>john --user:textuser（制定用户名） password
</code></pre><p><strong>查看已经爆破的密码</strong></p>
<pre><code>john --show password
john --show --user：textuser password
</code></pre><hr>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="images/po2.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/N2QwUDC.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>密码有点复杂，还是停掉吧，把密码改成123456试试</p>
<pre><code>passwd textuser
123456
123456
</code></pre><p><strong>注意要把password重新生成一下，生成passwordnew</strong></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="images/po2.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://i.imgur.com/Ripgfha.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p><strong>可以看到已经破解了密码了</strong></p>
<p>如果需要破解复杂的密码可能需要字典了</p>
<pre><code>john -w:all.txt（字典） passwordnew
</code></pre><p>工具可以到我的github下载<a href="https://github.com/Bixintiao/blogtool.git" target="_blank" rel="external">https://github.com/Bixintiao/blogtool.git</a></p>
<p>详细的john用法我到网上去dump一篇来，有时间再发吧：）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;这个操作的前提是拿到root权限，至于root权限可以参考单用户绕过，具体步骤改天出&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;0x01-etc-passwd和-etc-shadow&quot;&gt;&lt;a href=&quot;#0x01-etc-passwd和-etc-shado
    
    </summary>
    
    
      <category term="linux取证" scheme="http://yoursite.com/tags/linux%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>博客说明</title>
    <link href="http://yoursite.com/2017/03/24/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2017/03/24/博客说明/</id>
    <published>2017-03-24T01:18:17.000Z</published>
    <updated>2017-03-25T01:59:20.861Z</updated>
    
    <content type="html"><![CDATA[<p>搞了半天终于搭好了hexo+github<strong>(<a href="https://github.com/Bixintiao" target="_blank" rel="external">https://github.com/Bixintiao</a>)</strong>的个人博客。个人记性不好，以后在这里<a href="http://eviadmin.top" title="Pancheng个人博客" target="_blank" rel="external">http://eviadmin.top</a>将学习的内容记录一下，方便查找。（上传工具到github老是失败，所以有些工具大家自行百度吧）</p>
<hr>
<p>#个人说明#</p>
<h2 id="毕业小菜"><a href="#毕业小菜" class="headerlink" title="毕业小菜"></a>毕业小菜</h2><p>业精于勤，荒于嬉。身边的大牛好多，感觉自己好low啊。</p>
<h1 id="简要说明一下记录的内容"><a href="#简要说明一下记录的内容" class="headerlink" title="简要说明一下记录的内容"></a>简要说明一下记录的内容</h1><pre><code>- windows取证
- linux取证
- android取证
- ios取证
- 文件修复
- 密码破解
- misc
- web
- 隐写
- 逆向
- 密码
- 想到再加：）
</code></pre><hr>
<p><strong>欢迎各位大佬带带小弟</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搞了半天终于搭好了hexo+github&lt;strong&gt;(&lt;a href=&quot;https://github.com/Bixintiao&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Bixintiao&lt;/a&gt;)&lt;/str
    
    </summary>
    
    
      <category term="个人生活" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
